// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamUpAPI.Data;

#nullable disable

namespace TeamUpAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230704153952_improvements")]
    partial class improvements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("TeamUpAPI.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TeamUpAPI.Models.PlayTimeAvailability", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("EndHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartHour")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("PlayTimesAvailability");
                });

            modelBuilder.Entity("TeamUpAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamUpAPI.Models.Game", b =>
                {
                    b.HasOne("TeamUpAPI.Models.User", null)
                        .WithMany("GamesList")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TeamUpAPI.Models.PlayTimeAvailability", b =>
                {
                    b.HasOne("TeamUpAPI.Models.User", null)
                        .WithOne("PlayTimeAvailability")
                        .HasForeignKey("TeamUpAPI.Models.PlayTimeAvailability", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeamUpAPI.Models.User", b =>
                {
                    b.HasOne("TeamUpAPI.Models.User", null)
                        .WithMany("FriendsList")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("TeamUpAPI.Models.User", b =>
                {
                    b.Navigation("FriendsList");

                    b.Navigation("GamesList");

                    b.Navigation("PlayTimeAvailability")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
